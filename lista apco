//questão 1 
#include <stdio.h>

int soma_100(int n);//prototipo da função paa somar os 100 primeiros numeros naturais

int main(){
    int n = 100;
    printf("A soma dos 100 primeiros numeros naturais eh: %d\n", soma_100(n));//resultado esperado 5050 
    return 0;
}
int soma_100(int n){
    int soma = 0;//criação de uma variavel soma 
    for(int natural = 1; natural<=n; natural++){//criação de uma estrutura de repetição para passa pelos numeros naturais no intervalo[1,100]
            soma += natural;//armazenanmeno da soma dos numeros naturais
    }
    return soma;//retorna a soma total
}
_______________________________________________________________________________
//questão 2
#include <stdio.h>

int soma_50_impares(int n);//prototipo da função para somar 50 naturais impares

int main(){
    int n = 50;
    printf("A soma dos 50 primeiros numeros impares eh: %d\n", soma_50_impares(n));//chamada da função e o resultado esperado
    return 0;
}

int soma_50_impares(int n){
    int soma = 0;//criação e inicialização da variavel soma
    for(int natural = 1; natural<50; natural+=2){//estrutura de repetição para passar pelos numeros impares no intervalo de [1,50[
        soma += natural;
    }
    return soma;
}
_____________________________________________________________________________
//questão 3
#include <stdio.h>

int produto_impares(int n);//prototipo da função para calcular o prodto de n naturais impares 

int main(){
    int n;//criação de variavel n 
    printf("Informe um numero natural\n");//pergunta ao usuario
    scanf("%d", &n);//leitura da quantidade total de numeros impares

    printf("O produto dos %d numeros naturais impares eh: %d\n", n, produto_impares(n));//chamada da função e resultado obtido pela função
    return 0;
}
int produto_impares(int n){
    int produto = 1;
    for(int natural = 1; natural<=n; natural+=2){//criação de uma estrutura de repetição para passar pelos numeros naturais impares menores ou iguais a n[1,n]
        produto *= natural;//calculo do produto dos aturais impares
    }
    return produto;//retorno do total do produto
}
________________________________________________________________________________
//questão 4

#include <stdio.h>

int somatorio(int n);//prototipo da função para somar uma sequencia de n termos

int main(){
    int n;//criação da variavel n
    printf("Informe um numero n de termos para o calcul de S;\n");//pergunta ao usuario
    scanf("%d", &n);//leitura do valor n

    printf("O resultado do calculo de S eh: %d\n", somatorio(n));//chamada da função e impreenssão do resultado esperado
    return 0;
}
int somatorio(int n){
    int soma = 0;//criação da variavel soma
    for(int termo = 1; termo<=n; termo++){//criação de uma estrutura de repetição(inicialização 1, condição ser menor igual a n,incremento de 1 em 1)
        if(termo%2 == 0){//criação de uma estrutura condicional para verificar o sinal da sequencia
            soma -= termo;
        }else{
            soma += termo;
        }
    }
    return soma;
}

__________________________________________________________________________________
//questão 5
#include <stdio.h>

float calculo_de_s(int n);//prototipo da função para fazer um somatorio

int main(){
    int n;

    printf("Informe um valor para a quantidade de termos da sequencia\n");//pergunta ao usuario
    scanf("%d", &n);//leitura de n

    printf("O calculo de s eh: %.2f\n", calculo_de_s(n));//chamada da função e impreensao do resultado esperado

    return 0;
}
float calculo_de_s(int n){
    float soma = 0;
    float numerador = 1;

    for(int termo = 1, denominador = 1; termo<=n; denominador++, termo++){//estrutura de repetição incicialização (t = 1, den = 1), condição(t<=n), incremento(den++, t++)
        soma += numerador/denominador;//calculo de s
    }
    /*ou 
    float soma = 1;
    float numerador = 1;

    for(int temo = 2; termo<=n; termo++){
        soma += numerador/denominador;
    }*/
    return soma;
}
________________________________________________________________________________________________
//questão 6
#include <stdio.h>

float calcular_s(int n);//prototipo de uma função para calcular o valor de uma sequencia

int main(){
    int n;//criação da variavel n
    printf("Informe um valor n:\n");//pergunta ao usuario
    scanf("%d", &n);//leitura de n

    printf("O calculo da sequencia eh: %.2f\n", calcular_s(n));//impreensao do resultado e a chamada da função

    return 0;
}
float calcular_s(int n){
    float soma = 0;
    float num = 1;

    for(int termo = 1, den = 1; termo<=n; den++, termo++){//criação da estrutura de repetição para passar pelos termos e denominador
        if(den%2 == 0){//criação da estrutura condicional para verificar o sinal da sequencia atraves do denominador
            soma -= num/den;//calculo de s com sinal negativo
        }else{
            soma += num/den;//calculo de s com sinal positivo
        }
    }
    return soma;
}
_______________________________________________________________________________________________
//questao 7
#include <stdio.h>

float calcular_seq(int n);//prototipo da sequencia s

int main(){
    int n;
    printf("Informe um valor n: \n");
    scanf("%d", &n);//leitura de n

    printf("A soma da sequencia eh: %.2f\n", calcular_seq(n));//impreensao do resultado e chamada da função

    return 0;
}
float calcular_seq(int n){
    float soma = 0;
   
    for(int termo = 1, num = 1, den = 1; termo<=n; num++, den+=2, termo++){//estrutura de repetição
        soma += (float)num/den;//calculo da soma e mudando o tipo de num, para q a soma seja um numero float
    }

    return soma;
}

__________________________________________________________________________________________________________
//questão 8
#include <stdio.h>
#define n 5//definindo quantos asteriscos vai ter em cada linha

int main(){
    //letra a
    for(int qtd_ast=1; qtd_ast<=n; qtd_ast++){//primeiro for para a quantidade de linhas
        for(int ast = 1; ast<=n; ast++){//segundo for para imprimir os asteriscos
            printf("*");
        }
        printf("\n");//quebra de linha
    }
    printf("\n\n");
    //letra b
    for(int qtd_ast = 1; qtd_ast<= n; qtd_ast++){//primeiro for para a quantidade de linhas
        for(int ast=1; ast<=qtd_ast; ast++){
            printf("*");
        }
        printf("\n");
    }

    printf("\n\n");

    for(int qtd_ast = 1; qtd_ast<= n; qtd_ast++){//primeiro for controla a quantidade de linhas
        for(int ast = 5; ast>=qtd_ast; ast--){//segundo for costrola a quantidade de asteriscos por linha
            printf("*");
        }
        printf("\n");
    }
    return 0;
}
/*
linha 1, 5 ast >=1 *****
linha 1, 4 ast >=1 
linha 1, 3 ast >=1 
linha 1, 2 ast >=1 
linha 1, 1 ast >=1 

linha 2, 5 ast >=2 *****
linha 2, 4 ast >=2 ****
linha 2, 3 ast >=2 
linha 2, 2 ast >=2 
linha 2, 1 ast >=2 

.... ate..

linha 5, 5 ast >=5 vdd quando for vdd imprimi toda imagem
linha 5, 4 ast >=5 fss
linha 5, 3 ast >=5 fss
linha 5, 2 ast >=5 fss
linha 5, 1 ast >=5 fss
*/
____________________________________________________________________________________________________________
//questão 9
